#!/bin/env python

import os, os.path, re, pwd

USERLIST='/srv/jupyterhub/userlist'
HOME_BASE='/mnt/nfs/home/'

def user_exist(username):
    try:
        pwd.getpwnam(username)
        print 'User {} exists; skipping.'.format(username)
        return True
    except KeyError:
        #Warning('User {} does not exist.'.format(username))
        return False

def ensure_home_owner(username):
    home = os.path.join(HOME_BASE, username)
    try:
        os.system('chown -R {username}:{username} {home}'.format(username=username, home=home))
        os.system('chmod 755 -R {}'.format(home))
        print 'Changing owner/permissions for user {} home {}.'.format(username, home)
    except:
        raise Warning('Changing owner/permissions for user {} home {} failed!'.format(username, home))

def add_user(username, i):
    home = os.path.join(HOME_BASE, username)
    try:
        os.system('useradd --home {home} --uid {UID} {username}'.format(
            username=username, home=home, UID=1500+i))
        os.system('chown -R {username}:{username} {home}'.format(username=username, home=home))
        os.system('chmod 755 -R {}'.format(home))
        print 'Added user {} (home={})'.format(username, home)
    except: # what's the right Exception?
        raise Warning('Adding user {} failed!'.format(username))

def main():
    email_re = re.compile(r"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)")

    with open(USERLIST, 'r') as f:
        for i, line in enumerate(f):
            email = line.split()[0]
            if not email_re.match(email):
                raise Warning('{} is not a vaild email'.format(email))
            
            # matches my_oauthenticator
            username = email.split('@')[0].lower()
                
            if not user_exist(username):
                add_user(username,i)
            ensure_home_owner(username)
                
if __name__ == '__main__':
    main()
